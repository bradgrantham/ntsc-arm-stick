4/8
    Clean up row buffer generation
        row function pointers filled in by mode function?

Make a CB xtal into logic, test freq with scope to calibrate scope
    Need Schmidt triggers?
    Plug into GPIO for testing?
    DMA in, DMA out for colorburst?
    Just gate for colorburst?
Order a 14.318180 MHz crystal?  But then what to do about USB?
Order a range of ceramic caps for filtering?

H is 63555.56us
Scope only locks to my video at line #5

201.78, 16000000, 9, 227, 2, 14, 3.603175, 0.006601, YES
    Attempting to match the Apple //e phase:
    This outlier locked color! But MUCH more phase drift, blue to green over 1/2 line
    250 phase drift in 1/2 line
185.78, 16000000, 18, 418, 2, 13, 3.572650, -0.001926, YES
    This outlier the other direction also locked color! Reverse phase drift? orange to magenta
    -60 phase drift in 1/2 line
if 3.603175 is 250 drift and 3.572650 is -60 phase drift, I want 3.572650 + 60 * (3.603175 - 3.572650) / 310, or 3.57855806451612903225
    maybe line

221 capacitor is 220 pF / .22 nF
    3x = .66 nF
332 capacitor is 3300 pF / 3.3 nF
    So 1 nF or 2 nF might be nice intermediate
    2x would be 1.5 nF

Need database of video field formats
    VCR, Apple //e, Video tape, Look at Channel F output from VCR
    Want %H of each segment and voltage
        Number of first EQ burst (e.g. 0 or 6)
        Number of VSYNC bursts a la VCR and NTSC standard (e.g. 0 or 6)
        Number of VSYNC lines a la Apple //e (e.g. 4 or 0)
        Whether VSYNC lines have colorburst
        Number of second EQ burst (e.g. 0 or 6)
        Regular lines: sync pulse, back porch, location and count of colorbursts, front porch
        number of blank lines before, number of blank lines after
    "video {fcc1953, vcr, apple2e, tape, channelf}"

To Do
    Clean up breadboard - prevent wires from being yanked 
        make video connector a little less precarious somehow
        scope testpoints
    Read PPMs
        grayscale at 200x200 by 1 byte
        grayscale at 400x200 by 1 nybble
        color PPMs ? 
        palettized PPMs (how does that work?) at 200x200 by 1 byte,
            convert RGB palette to lookup table into 32 bit wave value
    if you can't get color figured out, jump ship
    audio - 22050?
        double buffering with realtime mixing?
        test with YMs
    Make into wired breadboard
        want different chip?  SRAM on the side?
        option to drive NTSC DAC or VGA 
    Design PCB, send off
    do a ray-tracing or other demo
    clean up current CLI - tableize with function and help
    embed a basic or scripting language
        read and write files
        MicroPython?
    factor out video formats somehow
        generalized beam-tracing framework
            per-row functions
            525 function pointers? (2K)
            swap DMA buffer pointers for EQ and VSYNC and not just copy stuff around
                But all functions get a 910-element buffer?
        give a shot at decompressing JPEG blocks in RT
        some modes will need to be exclusive because of memory size
            e.g. 200x200 palettized mode vs 400x400 bitmap mode
        interlaced mode
        monochrome 80 character text mode
        Apple //e video mode per row
            allow loading 0x2000 blobs
            HGR, GR? TEXT? 80TEXT? DHGR? DGR?
        Channel F video mode
    Apple //e emulation
    Z80 / CP/M emulation
    Channel F emulation
    ColecoVision emulation

So I now remember sort of that the Mikro has its own bootloader (?)
which can only be used with the Mikro downloader EXE.  Does the
Mikro not expose BOOT0?  I had made my own board out of an unmodified
STM32 exposing BOOT0 on the crazy big protoboard.  I can downloading using
"make burn", which calls dfu-util.
